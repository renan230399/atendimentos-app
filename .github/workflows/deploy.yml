name: Deploy para EC2 Pública

on:
  push:
    branches:
      - master  # Branch monitorada para o deploy
  workflow_dispatch:  # Permite rodar o workflow manualmente pela interface do GitHub

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Versão do Node.js que você deseja usar

      - name: Instalar dependências e Build
        run: |
          yarn install
          yarn build  # Builda os arquivos no servidor do GitHub Actions

      - name: Verificar arquivos do build
        run: |
          ls -l public/build  # Verifica se os arquivos de build foram gerados corretamente

      - name: Configurar SSH para EC2
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY_PEM }}  # Nome do segredo criado para a chave da instância pública

      - name: Copiar arquivos para a instância pública (inclui build)
        run: |
          rsync -avz --exclude 'node_modules' --include 'public/build/' -e "ssh -i /dev/shm/.ssh/ssh_key -o StrictHostKeyChecking=no" ./ ec2-user@3.95.59.48:/home/ec2-user/atendimentos-app/

      - name: Reinstalar dependências dentro do container
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@3.95.59.48 '
            cd /home/ec2-user/atendimentos-app &&
            docker-compose exec laravel.test yarn install
          '

      - name: Reiniciar Docker no EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@3.95.59.48 '
            cd /home/ec2-user/atendimentos-app &&
            docker-compose down &&
            docker-compose up -d --build
          '

      - name: Limpar e Semear o Banco de Dados
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@3.95.59.48 '
            cd /home/ec2-user/atendimentos-app &&
            docker-compose exec laravel.test php artisan migrate:fresh --seed
          '
