name: Deploy para EC2 Pública

on:
  push:
    branches:
      - master  # Branch monitorada para o deploy
  workflow_dispatch:  # Permite rodar o workflow manualmente pela interface do GitHub

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Versão do Node.js que você deseja usar

      - name: Instalar dependências e Build
        run: |
          npm install
          npm install ziggy-js
          npm run build

      - name: Configurar SSH para EC2
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY_PEM }}  # Nome do segredo criado para a chave da instância pública

      - name: Copiar Build para a instância pública
        run: |
          scp -o StrictHostKeyChecking=no -i "${{ secrets.EC2_SSH_KEY_PEM }}" -r public/build ec2-user@3.95.59.48:/home/ec2-user/atendimentos-app/public/build/

      - name: Reiniciar Docker no EC2
        run: |
          ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=120 -o StrictHostKeyChecking=no -o ConnectTimeout=120 ec2-user@3.95.59.48 '
            cd /home/ec2-user/atendimentos-app &&
            docker-compose down &&
            docker-compose up -d --build
          '

      - name: Limpar a tabela users
        run: |
          ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=120 -o StrictHostKeyChecking=no -o ConnectTimeout=120 ec2-user@3.95.59.48 '
            cd /home/ec2-user/atendimentos-app &&
            docker-compose exec laravel.test php -r "DB::table(\'users\')->truncate();"
          '

      - name: Executar Database Seeder
        run: |
          ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=120 -o StrictHostKeyChecking=no -o ConnectTimeout=120 ec2-user@3.95.59.48 '
            cd /home/ec2-user/atendimentos-app &&
            docker-compose exec laravel.test php artisan db:seed
          '
